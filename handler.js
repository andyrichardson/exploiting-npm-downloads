const https = require("https");
const TRIGGER_PROBABILITY = 0.25;

exports.handler = async ({ package }) => {
  console.log(
    `Rolling a die to see if we run this time (p ${TRIGGER_PROBABILITY})`
  );

  if (Math.random() > TRIGGER_PROBABILITY) {
    console.log("Roll fail - skipping run");
    return;
  }

  console.log("Roll success!");
  
  try {
    await downloadPackage({ package });
    console.log("Package fetched!");
  } catch(err) {
    console.error('Package fetch fail');
    console.error(err)
    throw err;
  }
};

const downloadPackage = async ({ package }) => {
  const tarball = await new Promise((resolve, reject) => {
    https
      .get(`https://registry.npmjs.org/${package}`, (res) => {
        let data = "";
        res.on("data", (chunk) => (data += chunk));
        res.on("end", () => {
          const response = JSON.parse(data);
          const tarball =
            response.versions[Object.keys(response.versions)[0]].dist.tarball;
          resolve(tarball);
        });
      })
      .on("error", reject);
  });

  await new Promise((resolve, reject) =>
    https.get(tarball, (res) => {
      res.on("data", () => {});
      res.on("end", resolve);
    }).on("error", reject)
  );
};
